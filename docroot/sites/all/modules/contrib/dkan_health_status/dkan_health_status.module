<?php

define("DKAN_HEALTH_OKAY", 'okay');
define("DKAN_HEALTH_WARNING", 'warning');
define("DKAN_HEALTH_ERROR", 'error');
define("DKAN_HEALTH_UNKNOWN", 'unknown');

include("dkan_health_status.checks.inc");

/**
 * @file
 * Health Checks for DKAN
 */

/**
 * Gets monitors that have been registered.
 *
 * @return array
 *   Monitors supplied by hooks.
 */
function dkan_health_status_get_monitors() {
  $monitors = module_invoke_all('dkan_health_status_monitors');
  // Organize monitors by group.
  $checks = array();
  foreach ($monitors as $key => $m) {
    $checks[$key] = $m;
  }
  return $checks;
}

/**
 * Implements hook_menu().
 */
function dkan_health_status_menu() {
  // Health API callback.
  $items['health/dkan'] = array(
    'title' => 'Health API',
    'description' => 'Health API callback.',
    'page callback' => 'dkan_health_status_api_json',
    'access callback' => 'dkan_health_status_api_access',
  );
  $monitors = dkan_health_status_get_monitors();
  foreach ($monitors as $check_name => $check) {
    $items['health/dkan/' . $check_name] = array(
      'title' => $check['name'],
      'description' => $check['description'],
      'page callback' => 'dkan_health_status_api_json',
      'page arguments' => array($check_name),
      'access callback' => 'dkan_health_status_api_access',
    );
  }
  return $items;
}

/**
 * This is the same as health_api_access except it uses _GET not _POST.
 */
function dkan_health_status_api_access() {
  $key = isset($_GET['key']) ? $_GET['key'] : '';
  $require_https = variable_get('dkan_health_status_api_require_https', FALSE);
  $https_on = isset($_SERVER['HTTPS']) ? $_SERVER['HTTPS'] : ''; 
  $required_key = variable_get('dkan_health_status_health_api_access_key', FALSE);
  return dkan_health_status_api_access_check($key, $required_key, $require_https, $https_on);
}

/**
 * Checks access for endpoint.
 *
 * @param $key string
 *   key query passed to endpoint
 * @param $required_key string
 *   key expected by the site 
 * @param $require_https boolean
 *   TRUE if https is required 
 * @param $https_on boolean
 *   TRUE if https is prt of the request 
 */
function dkan_health_status_api_access_check($key,  $required_key, $require_https, $https_on) {
  // Make sure they sent a key.
  if (!isset($key) || empty($key)) {
    return FALSE;
  }
  // Check if we are requiring HTTPS.
  if ($require_https && !$https_on) {
    // User is not using HTTPS.
    return FALSE;
  }
  // Check the key versus the one we have stored.
  if ($key !== $required_key) {
    // Wrong key sent.
    return FALSE;
  }
  // All checks passed, allow access.
  return TRUE;
}

/**
 * Returns a properly formatted message from a monitor.
 *
 * @param string $status
 *   Status should be HEALTH_OKAY, HEALTH_WARNING, HEALTH_ERROR, or HEALTH_UNKNOWN.
 * @param string $message
 *   A message to show on the Health Status page.
 *
 * @return array
 *   Returns a properly formatted response for the Health monitor.
 */
function dkan_health_status_message($status, $message) {
  return array(
    'status' => $status,
    'message' => $message,
  );
}

/**
 * Gets all the health status data from modules that hook into it.
 *
 * @return array
 *   Results from all the health monitors.
 */
function dkan_health_status_get_data() {
  $monitors = dkan_health_status_get_monitors();
  foreach ($monitors as $check_name => $check) {
    $results[$check_name] = module_invoke_all('dkan_health_status_monitor_' . $check_name);
  }
  return (array)$results;
}

/**
 * Callback for drupal health check endpoint.
 */
function dkan_health_status_api_json($check_name = NULL) {
  drupal_page_is_cacheable(FALSE);
  
  // If given a check, only return that check.
  if ($check_name) {
    $data = module_invoke_all('dkan_health_status_monitor_' . $check_name);
  }
  else {
    $data = dkan_health_status_get_data();
  }
  return drupal_json_output($data);
}
