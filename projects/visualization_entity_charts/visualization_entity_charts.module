<?php

/**
 * @file
 * Code for the Visualization Entity Charts feature.
 */

include_once 'visualization_entity_charts.features.inc';

/**
 * Implements hook_form_alter().
 */
function visualization_entity_charts_form_alter(&$form, $form_state, $form_id) {

  switch ($form_id) {
    case 'eck__entity__form_add_visualization_ve_chart':
    case 'eck__entity__form_edit_visualization_ve_chart':
      visualization_entity_charts_attach_libraries($form);
      break;
  }
}

/**
 * Attach needed libraries to an element.
 */
function visualization_entity_charts_attach_libraries(&$element) {
  $libraries = array(
    'lodash',
    'backbone',
    'recline',
    'd3',
    'nvd3',
    'reclineViewNvd3',
    'gdocs',
    'csv',
    'mustache',
    'lodash_data',
    'chosen',
    'moment',
    'slickgrid',
    'chosen_bootstrap',
  );

  foreach ($libraries as $library) {
    $element['#attached']['libraries_load'][] = array($library);
  }
  $module_path = drupal_get_path('module', 'visualization_entity_charts');
  $element['#attached']['css'][] = $module_path . '/css/ve_chart.css';
  drupal_add_js($module_path . '/js/visualization_entity_charts_steps.js', array('weight' => 100));
  drupal_add_js($module_path . '/js/visualization_entity_charts_editors.js', array('weight' => 101));
  drupal_add_js($module_path . '/js/visualization_entity_charts.js', array('weight' => 102));
}

/**
 * Implements hook_entity_view().
 */
function visualization_entity_charts_entity_view($entity, $type, $view_mode, $langcode) {
  if ($type == 'visualization' && $entity->type == 've_chart') {
    $entity->content['#suffix'] = '<div id="graph"></div>';
    visualization_entity_charts_attach_libraries($entity->content);
    $entity->content['#attached']['css'][] = drupal_get_path('module', 'visualization_entity_charts') . '/css/ve_chart.css';
    drupal_add_js(drupal_get_path('module', 'visualization_entity_charts') . '/js/visualization_entity_charts_view.js', array('weight' => 101));
  }
}
/**
 * Implements hook_theme().
 */
function visualization_entity_charts_theme($existing, $type, $theme, $path) {
  return array(
    'eck__entity__form_add_visualization_ve_chart' => array(
      'render element' => 'form',
      'template' => 've-chart-form',
      'path' => drupal_get_path('module', 'visualization_entity_charts'),
    ),
    'eck__entity__form_edit_visualization_ve_chart' => array(
      'render element' => 'form',
      'template' => 've-chart-form',
      'path' => drupal_get_path('module', 'visualization_entity_charts'),
    ),
  );
}

/**
 * Implements hook_libraries_info().
 */
function visualization_entity_charts_libraries_info() {
  $libraries = array();
  $libraries['nvd3'] = array(
    'name' => 'NVD3',
    'vendor url' => 'https://github.com/novus/nvd3',
    'download url' => 'https://github.com/novus/nvd3/archive/master.zip',
    'path' => '',
    'version arguments' => array(
      'file' => 'package.json',
      'pattern' => '/"version": "(\d+\.\d+\.\d+)"/',
    ),
    'dependencies' => array('d3'),
    'files' => array(
      'js' => array(
        'nv.d3.min.js',
      ),
      'css' => array(
        'nv.d3.min.css',
      ),
    ),
  );
  $libraries['d3'] = array(
    'name' => 'D3',
    'vendor url' => 'https://github.com/mbostock/d3',
    'download url' => 'https://github.com/mbostock/d3/archive/master.zip',
    'version arguments' => array(
      'file' => 'package.json',
      'pattern' => '/"version": "(\d+\.\d+\.\d+)"/',
    ),
    'files' => array(
      'js' => array(
        'd3.min.js',
      ),
    ),
  );
  $libraries['reclineViewNvd3'] = array(
    'name' => 'recline.view.nvd3.js',
    'vendor url' => 'https://github.com/NuCivic/recline.view.nvd3.js',
    'download url' => 'https://github.com/NuCivic/recline.view.nvd3.js/archive/master.zip',
    'version arguments' => array(
      'file' => 'package.json',
      'pattern' => '/"version": "(\d+\.\d+\.\d+)"/',
    ),
    'files' => array(
      'js' => array(
        'dist/recline.view.nvd3.min.js',
        'dist/recline.view.nvd3.controls.min.js',
      ),
      'css' => array(
        'css/style.css',
      ),
    ),
  );

  $libraries['lodash_data'] = array(
    'name' => 'lodashdata',
    'vendor url' => 'https://github.com/NuCivic/lodash.data',
    'download url' => 'https://github.com/NuCivic/lodash.data/archive/master.zip',
    'version arguments' => array(
      'file' => 'package.json',
      'pattern' => '/"version": "(\d+\.\d+\.\d+)"/',
    ),
    'files' => array(
      'js' => array(
        'dist/lodash.data.min.js',
      ),
    ),
  );

  $libraries['moment'] = array(
    'name' => 'moment',
    'vendor url' => 'https://github.com/moment/moment',
    'download url' => 'https://github.com/moment/moment/archive/master.zip',
    'version arguments' => array(
      'file' => 'package.json',
      'pattern' => '/"version": "(\d+\.\d+\.\d+)"/',
    ),
    'files' => array(
      'js' => array(
        'min/moment.min.js',
      ),
    ),
  );


  $libraries['chosen'] = array(
    'name' => 'chosen',
    'vendor url' => 'https://github.com/harvesthq/chosen',
    'download url' => 'https://github.com/harvesthq/chosen/releases/download/v1.3.0/chosen_v1.3.0.zip',
    'version arguments' => array(
      'file' => 'chosen.jquery.min.js',
      'pattern' => '/Chosen v(\d+\.\d+\.\d+)/',
    ),
    'files' => array(
      'js' => array(
        'chosen.jquery.min.js',
      ),
      'css' => array(
        'chosen.css',
      ),
    ),
  );

  $libraries['chosen_bootstrap'] = array(
    'name' => 'chosen_bootstrap',
    'vendor url' => 'https://github.com/dbtek/chosen-bootstrap',
    'download url' => 'https://github.com/dbtek/chosen-bootstrap.git',
    'version arguments' => array(
      'file' => 'bower.json',
      'pattern' => '/"version": "(\d+\.\d+\.\d+)"/',
    ),
    'files' => array(
      'css' => array(
        'chosen.bootstrap.min.css',
      ),
    ),
  );

  $libraries['gdocs'] = array(
    'name' => 'gdocs',
    'vendor url' => 'https://github.com/okfn/recline.backend.gdocs',
    'version' => '0.0.1',
    'files' => array(
      'js' => array(
        'backend.gdocs.js',
      ),
    ),
  );

  return $libraries;
}

/**
 * Implements hook_block_info().
 */
function visualization_entity_charts_block_info() {
  $blocks = array();
  $blocks['ve_chart_button'] = array(
    'info' => t('Viz Entity Chart Button'),
    'cache' => DRUPAL_NO_CACHE,
  );
  return $blocks;
}

/**
 * Implements hook_libraries_info_alter().
 */
function visualization_entity_charts_libraries_info_alter(&$libraries) {
  if (isset($libraries['recline']['files']['js'])) {
    $recline = $libraries['recline']['files']['js'];

    // This file breaks the javascript site.
    $index = array_search('vendor/timeline/js/timeline.js', $recline);
    unset($libraries['recline']['files']['js'][$index]);
  }
  // Removing chosen to use chosen bootstrap instead.
  if(isset($libraries['chosen']['files']['css'])){
    // $chosen = $libraries['chosen']['files']['css'];
    // $index = array_search('chosen.css', $chosen);
    // unset($libraries['chosen']['files']['css'][$index]);
  }
}

/**
 * Preprocess for chart add form.
 */
function template_preprocess_eck__entity__form_add_visualization_ve_chart(&$vars) {
  template_preprocess_eck__entity__form_edit_visualization_ve_chart($vars);
}

/**
 * Preprocess for chart edit form.
 */
function template_preprocess_eck__entity__form_edit_visualization_ve_chart(&$vars) {
  $form = $vars['form'];
  $form = visualization_entity_charts_attach_libraries($form);
  unset($vars['form']['actions']);
  unset($vars['form']['submit']);
}
